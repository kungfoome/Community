#########################################################################
# Title:            Community: nocodb                                   #
# Author(s):        kungfoome                                           #
# URL:              https://github.com/nocodb/nocodb                    #
# Docker Image(s):  nocodb/nocodb                                       #
# --                                                                    #
#         Part of the Cloudbox project: https://cloudbox.works          #
#########################################################################
#                   GNU General Public License v3.0                     #
#########################################################################
---
- name: Postgres Role
  include_role:
    name: postgres

- name: Install Postgres tools
  sudo: true
  apt: name={{ item }} state=latest
  with_items:
    - libpq-dev
    - python-psycopg2

- name: "Create a new database for nocodb"
  postgresql_db:
    name: "{{ nocodb.db_name }}"
    login_host: localhost 
    login_user: "{{ postgres.user }}"
    login_password: "{{ postgres.password }}"

- name: "Create a new user for nocodb"
  postgresql_user:
    name: "{{ nocodb.db_user }}"
    db: "{{ nocodb.db_name }}"
    password: "{{ nocodb.db_password }}"
    login_host: localhost 
    login_user: "{{ postgres.user }}"
    login_password: "{{ postgres.password }}"
    encrypted: yes
    priv: ALL
    
- name: "Set DNS Record on CloudFlare"
  include_role:
    name: cloudflare-dns
  vars:
    record: "{{ nocodb.subdomain|default('nocodb',true) }}"
  when: (cloudflare_enabled) and not (nocodb.direct_domain|default(false,true))

- name: "Setting CloudFlare DNS Record"
  include_role:
    name: cloudflare-dns
  vars:
    record: "{{ item }}"
  with_items:
    - "{{ user.domain }}"
    - "www"
  when: (cloudflare_enabled) and (nocodb.direct_domain|default(false,true))

- name: Stop and remove any existing container
  docker_container:
    name: nocodb
    state: absent

- name: Create and start container
  docker_container:
    name: nocodb
    image: nocodb/nocodb 
    pull: yes
    env:
      NC_DB: "pg://postgres:5432?u={{ nocodb.db_user }}&p={{ nocodb.db_password }}&d=nocodb"
      NC_AUTH_JWT_SECRET: "{{ nocodb.auth_jwt_secret }}"
      NC_PUBLIC_URL: "{{ (nocodb.direct_domain|default(false,true)) | ternary(user.domain + ',' + 'www.' + user.domain, nocodb.subdomain|default('nocodb',true) + '.' + user.domain) }}"
      VIRTUAL_HOST:  "{{ (nocodb.direct_domain|default(false,true)) | ternary(user.domain + ',' + 'www.' + user.domain, nocodb.subdomain|default('nocodb',true) + '.' + user.domain) }}"
      VIRTUAL_PORT: "8080"
      LETSENCRYPT_HOST: "{{ (nocodb.direct_domain|default(false,true)) | ternary(user.domain + ',' + 'www.' + user.domain, nocodb.subdomain|default('nocodb',true) + '.' + user.domain) }}"
      LETSENCRYPT_EMAIL: "{{ user.email }}"
    labels:
      "com.github.cloudbox.cloudbox_managed": "true"
    volumes:
      - /opt/nocodb:/usr/app/data/
    networks:
      - name: cloudbox
        aliases:
          - nocodb
    purge_networks: yes
    restart_policy: unless-stopped
    state: started
